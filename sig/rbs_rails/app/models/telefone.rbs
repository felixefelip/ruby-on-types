class Telefone < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Telefone, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def ddd: () -> String?

    def ddd=: (String?) -> String?

    def ddd?: () -> bool

    def ddd_changed?: () -> bool

    def ddd_change: () -> [ String?, String? ]

    def ddd_will_change!: () -> void

    def ddd_was: () -> String?

    def ddd_previously_changed?: () -> bool

    def ddd_previous_change: () -> Array[String?]?

    def ddd_previously_was: () -> String?

    def ddd_before_last_save: () -> String?

    def ddd_change_to_be_saved: () -> Array[String?]?

    def ddd_in_database: () -> String?

    def saved_change_to_ddd: () -> Array[String?]?

    def saved_change_to_ddd?: () -> bool

    def will_save_change_to_ddd?: () -> bool

    def restore_ddd!: () -> void

    def clear_ddd_change: () -> void

    def numero: () -> String?

    def numero=: (String?) -> String?

    def numero?: () -> bool

    def numero_changed?: () -> bool

    def numero_change: () -> [ String?, String? ]

    def numero_will_change!: () -> void

    def numero_was: () -> String?

    def numero_previously_changed?: () -> bool

    def numero_previous_change: () -> Array[String?]?

    def numero_previously_was: () -> String?

    def numero_before_last_save: () -> String?

    def numero_change_to_be_saved: () -> Array[String?]?

    def numero_in_database: () -> String?

    def saved_change_to_numero: () -> Array[String?]?

    def saved_change_to_numero?: () -> bool

    def will_save_change_to_numero?: () -> bool

    def restore_numero!: () -> void

    def clear_numero_change: () -> void

    def cliente_id: () -> Integer

    def cliente_id=: (Integer) -> Integer

    def cliente_id?: () -> bool

    def cliente_id_changed?: () -> bool

    def cliente_id_change: () -> [ Integer?, Integer? ]

    def cliente_id_will_change!: () -> void

    def cliente_id_was: () -> Integer?

    def cliente_id_previously_changed?: () -> bool

    def cliente_id_previous_change: () -> Array[Integer?]?

    def cliente_id_previously_was: () -> Integer?

    def cliente_id_before_last_save: () -> Integer?

    def cliente_id_change_to_be_saved: () -> Array[Integer?]?

    def cliente_id_in_database: () -> Integer?

    def saved_change_to_cliente_id: () -> Array[Integer?]?

    def saved_change_to_cliente_id?: () -> bool

    def will_save_change_to_cliente_id?: () -> bool

    def restore_cliente_id!: () -> void

    def clear_cliente_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def cliente: () -> Cliente
  def cliente=: (Cliente?) -> Cliente?
  def reload_cliente: () -> Cliente?
  def build_cliente: (untyped) -> Cliente
  def create_cliente: (untyped) -> Cliente
  def create_cliente!: (untyped) -> Cliente
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Telefone, Integer]
    include Enumerable[Telefone]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Telefone, Integer]
  end
end
